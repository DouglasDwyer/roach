var searchIndex = JSON.parse('{\
"roach":{"doc":"Rust object archive: strongly-typed persistent key value …","t":"DDEIDIINIDNQDIQDDDNIDSQDIDQDKLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKLLLLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AccessGuard","Archive","ArchiveError","ArchiveType","Const","DataConverter","DataTransform","Deserialize","Direction","FromArchive","Io","Key","Mut","Mutability","Output","Pod","PodGuard","Rmp","Serialize","StorageBackend","StringGuard","TYPE_NAME","Target","ToArchive","ToWriter","Transaction","Value","Zstd","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","as_ref","as_ref","backend","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","commit","deref","deref","deref","deref","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_deserialize","from_io","from_serialize","get","into","into","into","into","into","into","into","into","into","into","into","into","into","iter","keys","len","new","read","read","remove","replace","set","set_len","set_version","sync_data","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","version","write","write","write","FileBackend","InMemoryBackend","borrow","borrow","borrow_mut","borrow_mut","default","drop","fmt","fmt","from","from","into","into","len","len","new","new","read","read","set_len","set_len","sync_data","sync_data","try_from","try_from","try_into","try_into","type_id","type_id","write","write"],"q":[[0,"roach"],[167,"roach::backend"],[199,"core::result"],[200,"bytemuck::pod"],[201,"bytemuck::zeroable"],[202,"core::convert"],[203,"std::io"],[204,"serde::ser"],[205,"serde::de"],[206,"std::io"],[207,"core::fmt"],[208,"core::marker"],[209,"core::marker"],[210,"core::option"],[211,"core::marker"],[212,"std::io::error"],[213,"alloc::vec"],[214,"semver"],[215,"alloc::string"],[216,"core::any"],[217,"std::io"],[218,"redb::error"]],"d":["Provides a view of raw archived data.","An archive of strongly-typed data.","Describes an error that occurred while interacting with an …","Defines a type of key-value pair which may be stored in an …","Marks an immutable type.","Implements the ability to convert from a canonical target …","Implements the ability to convert archived data to …","There was a problem while deserializing data to its …","Marks the direction in which an archive operation occurs.","Marks a type that converts objects from their archived …","There was a problem during an interaction with the raw …","The converter for the key type.","Marks a mutable type.","Marks whether a type is mutable or immutable.","The output type of this transformation.","Archives a type by copying its raw bytes. Endianness is …","Provides a view of <code>Pod</code>-archived data in an archive.","Archives a type by serializing its contents with the …","There was a problem while serializing data to its archived …","Implements persistent storage for a database.","Provides a view of archived string data.","The type name which should be used to identify these …","The key or value type which may be converted.","Marks a type that converts objects to their archived …","Allows for writing contents to a <code>Write</code>.","Facilitates an atomic interaction with an <code>Archive</code>.","The converter for the value type.","Archives a byte array by serializing it using the <code>zstd</code> …","Attempts to convert the given input type to the output.","","","","","","","","","","","","Provides backends to store archive data in various ways.","","","","","","","","","","","","","","","","","","","","","","","","","","","Commits this transaction to the archive. Any modifications …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new <code>Archive::Deserialize</code> error variant.","Creates a new <code>Archive::Io</code> error variant.","Creates a new <code>Archive::Serialize</code> error variant.","Gets the value with the specified key from the archive, if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Obtains an iterator over all keys and values of the given …","Obtains an iterator over all keys of the given type in the …","Gets the current length of the storage.","Opens an archive with the specified storage backend.","Reads the specified array of bytes from the storage.","Initiates a read transaction against the archive.","Removes the value with the specified key from the archive.","Replaces the value of the provided key, returning the old …","Sets the provided key to the given value in the archive.","Sets the length of the storage.","Sets the application-defined archive version.","Syncs all buffered data with the persistent storage.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Obtains an iterator over all values for the provided key …","Gets the application-defined archive version.","Writes the specified array to the storage.","Dumps the contents of <code>self</code> into the provided writer.","Initiates a write transaction against the archive.","Stores a database as a file on-disk.","Acts as temporal in-memory database storage.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Creates a new backend which stores data to the given file.","Creates a new, empty memory backend.","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,0,0,1,30,0,0,48,0,0,0,1,0,0,30,49,0,0,0,30,0,48,50,50,51,51,51,52,52,52,52,10,10,0,50,17,51,52,23,15,18,10,37,14,53,54,1,50,17,51,52,23,15,18,10,37,14,53,54,1,15,17,18,10,10,15,17,23,15,18,10,1,1,50,17,51,52,23,15,18,10,37,14,53,54,1,1,1,1,15,50,17,51,52,23,15,18,10,37,14,53,54,1,15,15,34,23,34,23,15,15,15,34,23,34,1,50,17,51,52,23,15,18,10,37,14,53,54,1,50,17,51,52,23,15,18,10,37,14,53,54,1,50,17,51,52,23,15,18,10,37,14,53,54,1,15,23,34,55,23,0,0,44,43,44,43,43,44,44,43,44,43,44,43,44,43,44,43,44,43,44,43,44,43,44,43,44,43,44,43,44,43],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[2,[1]]],[]],[-1,[[2,[1]]],[3,4]],[-1,[[2,[1]]],[[7,[[6,[5]]]]]],[-1,[[2,[1]]],8],[[[10,[[9,[5]]]]],[[2,[1]]]],[-1,[[2,[1]]],[11,12]],[-1,[[2,[1]]],[]],[[[10,[[9,[5]]]]],[[2,[1]]]],[[[10,[[9,[5]]]]],[[2,[1]]]],[-1,[[2,[1]]],13],[[[10,[[9,[5]]]]],[[9,[5]]]],[[[10,[[6,[5]]]]],[[6,[5]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[15,[14,-1]]],[[2,[16,1]]],[]],[[[17,[-1,-2]]],[],[3,4],[[7,[[6,[5]]]]]],[18],[[[10,[[6,[5]]]]]],[[[10,[[9,[5]]]]]],[[[15,[-1,-2]]],16,19,[]],[[[17,[-1,-2]],20],21,[22,3],[[7,[[6,[5]]]]]],[[[23,[-1]],20],21,[]],[[[15,[-1,-2]],20],21,19,[]],[[18,20],21],[[[10,[-1]],20],21,[22,24]],[[1,20],21],[[1,20],21],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,1,[25,26,27]],[-1,1,[25,26,27]],[-1,1,[25,26,27]],[[[15,[-1,-3]],-2],[[2,[28,1]]],19,29,[[30,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[15,[-1,-3]]],[[0,[31]]],19,29,[[30,[-2]]]],[[[15,[-1,-3]]],[[0,[31]]],19,29,[[30,[-2]]]],[-1,[[2,[32,33]]],[]],[-1,[[2,[[23,[-2]],1]]],34,[]],[[-1,32,35],[[2,[[36,[5]],33]]],[]],[[[23,[-1]]],[[2,[[15,[37,-1]],1]]],[]],[[[15,[14,-2]],-1],[[2,[28,1]]],29,[[30,[-1]]]],[[[15,[14,-2]],-1,-3],[[2,[28,1]]],29,[[30,[-1]]],29],[[[15,[14,-2]],-1,-3],[[2,[16,1]]],29,[[30,[-1]]],29],[[-1,32],[[2,[16,33]]],[]],[[[23,[-1]],38],[[2,[16,1]]],[]],[[-1,39],[[2,[16,33]]],[]],[-1,40,[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[[[15,[-1,-3]]],[[0,[31]]],19,29,[[30,[-2]]]],[[[23,[-1]]],[[2,[38,1]]],[]],[[-1,32,[9,[5]]],[[2,[16,33]]],[]],[[-1,-2],[[2,[16,1]]],[],42],[[[23,[-1]]],[[2,[[15,[14,-1]],1]]],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],43],[44,16],[[44,20],[[2,[16,45]]]],[[43,20],[[2,[16,45]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,[[2,[32,33]]]],[43,[[2,[32,33]]]],[46,[[2,[44,47]]]],[[],43],[[44,32,35],[[2,[[36,[5]],33]]]],[[43,32,35],[[2,[[36,[5]],33]]]],[[44,32],[[2,[16,33]]]],[[43,32],[[2,[16,33]]]],[[44,39],[[2,[16,33]]]],[[43,39],[[2,[16,33]]]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,41,[]],[-1,41,[]],[[44,32,[9,[5]]],[[2,[16,33]]]],[[43,32,[9,[5]]],[[2,[16,33]]]]],"c":[],"p":[[4,"ArchiveError",0],[4,"Result",199],[8,"Pod",200],[8,"Zeroable",201],[15,"u8"],[15,"array"],[8,"AsRef",202],[8,"Read",203],[15,"slice"],[3,"AccessGuard",0],[8,"Serialize",204],[8,"DeserializeOwned",205],[8,"BufRead",203],[3,"Mut",0],[3,"Transaction",0],[15,"tuple"],[3,"PodGuard",0],[3,"StringGuard",0],[8,"Mutability",0],[3,"Formatter",206],[6,"Result",206],[8,"Debug",206],[3,"Archive",0],[8,"RedbValue",207],[8,"Send",208],[8,"Sync",208],[8,"Error",209],[4,"Option",210],[8,"Sized",208],[8,"ArchiveType",0],[8,"Iterator",211],[15,"u64"],[3,"Error",212],[8,"StorageBackend",0],[15,"usize"],[3,"Vec",213],[3,"Const",0],[3,"Version",214],[15,"bool"],[3,"String",215],[3,"TypeId",216],[8,"Write",203],[3,"InMemoryBackend",167],[3,"FileBackend",167],[3,"Error",206],[3,"File",217],[4,"DatabaseError",218],[8,"DataTransform",0],[8,"DataConverter",0],[3,"Pod",0],[3,"Rmp",0],[3,"Zstd",0],[3,"ToArchive",0],[3,"FromArchive",0],[8,"ToWriter",0]],"b":[[29,"impl-DataTransform%3C\'a,+%26T,+ToArchive%3E-for-Pod%3CT%3E"],[30,"impl-DataTransform%3C\'a,+I,+FromArchive%3E-for-Pod%3CT%3E"],[31,"impl-DataTransform%3C\'a,+I,+FromArchive%3E-for-Rmp%3CT%3E"],[32,"impl-DataTransform%3C\'a,+AccessGuard%3C\'a,+%26%5Bu8%5D%3E,+FromArchive%3E-for-Rmp%3CT%3E"],[33,"impl-DataTransform%3C\'a,+%26T,+ToArchive%3E-for-Rmp%3CT%3E"],[34,"impl-DataTransform%3C\'a,+I,+ToArchive%3E-for-Zstd%3CT,+LEVEL%3E"],[35,"impl-DataTransform%3C\'a,+AccessGuard%3C\'a,+%26%5Bu8%5D%3E,+FromArchive%3E-for-Zstd%3CT,+LEVEL%3E"],[36,"impl-DataTransform%3C\'a,+AccessGuard%3C\'a,+%26%5Bu8%5D%3E,+FromArchive%3E-for-Zstd%3C%5Bu8%5D,+LEVEL%3E"],[37,"impl-DataTransform%3C\'a,+I,+FromArchive%3E-for-Zstd%3CT,+LEVEL%3E"],[38,"impl-AsRef%3C%5Bu8%5D%3E-for-AccessGuard%3C\'a,+%26%5Bu8%5D%3E"],[39,"impl-AsRef%3C%5Bu8;+N%5D%3E-for-AccessGuard%3C\'a,+%26%5Bu8;+N%5D%3E"],[70,"impl-Deref-for-AccessGuard%3C\'a,+%26%5Bu8;+N%5D%3E"],[71,"impl-Deref-for-AccessGuard%3C\'a,+%26%5Bu8%5D%3E"],[78,"impl-Display-for-ArchiveError"],[79,"impl-Debug-for-ArchiveError"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
